if(input.Customer_id != null)
{
	Customer_Id = input.Customer_id;
	open_bracket_index = find(Customer_Id,"(");
	close_bracket_index = find(Customer_Id,")");
	if(open_bracket_index >= 0 && close_bracket_index >= 0)
	{
		number_within_brackets = Customer_Id.subString(open_bracket_index + 1,close_bracket_index);
		id = number_within_brackets;
		input.Description = id;
	}
	else
	{
		info "No number within brackets found in the string.";
	}
}
if(input.Items_id != null)
{
	item_id = input.Items_id;
	open_bracket_index = find(item_id,"(");
	close_bracket_index = find(item_id,")");
	if(open_bracket_index >= 0 && close_bracket_index >= 0)
	{
		number_within_brackets = item_id.subString(open_bracket_index + 1,close_bracket_index);
		item_id = number_within_brackets;
		input.Description = id;
	}
	else
	{
		info "No number within brackets found in the string.";
	}
	item_name = input.Items_id;
	// Find the index of the opening and closing brackets
	open_bracket_index = indexOf(item_name,"(");
	close_bracket_index = indexOf(item_name,")");
	// Check if both opening and closing brackets are found
	if(open_bracket_index != -1 && close_bracket_index != -1)
	{
		// Extract the substring outside the brackets
		string_outside_brackets = left(item_name,open_bracket_index) + right(item_name,len(item_name) - close_bracket_index - 1);
		name = string_outside_brackets;
	//	input.Description = name;
		// Output the extracted string
		info "String outside brackets: " + string_outside_brackets;
	}
	else
	{
		info "No brackets found in the string.";
	}
}
// convert 01-feb-2024 to 2024-02-01 
if(input.Invoice_Date != null)
{
	invoice_date = input.Invoice_Date;
	dateObject_to = toDate(invoice_date,"dd-MMM-yyyy");
	inv_date = dateObject_to.toString("yyyy-MM-dd");
}
// convert 01-feb-2024 to 2024-02-01 
if(input.Date_Due != null)
{
	date_due = input.Date_Due;
	dateObjec_duet = toDate(date_due,"dd-MMM-yyyy");
	date_duee = dateObjec_duet.toString("yyyy-MM-dd");
}
description = input.Description;
quantity = input.Quantity;
unit_price = input.Unit_Price;
line_items = Map();
line_items.put("item_id",item_id);
line_items.put("name",name);
line_items.put("description",description);
line_items.put("rate",unit_price);
line_items.put("quantity",quantity);
List_item = List();
List_item.add(line_items);
invoice_map = Map();
invoice_map.put("customer_id",id);
invoice_map.put("date",inv_date);
invoice_map.put("due_date",date_duee);
invoice_map.put("line_items",List_item);
response = invokeurl
[
	url :"https://www.zohoapis.com/books/v3/invoices?organization_id=844837969"
	type :POST
	parameters:invoice_map.toString()
	connection:"conn_books"
];
info response;
